// –°–∏—Å—Ç–µ–º–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π –∏ –∑–∞–≤–µ–¥–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ Gangsters
// –°–æ–∑–¥–∞–Ω–∏–µ –∑–æ–Ω –≤–ª–∏—è–Ω–∏—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è

// –ó–∞–≤–µ–¥–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
const establishmentsData = [];

// –°–∏—Å—Ç–µ–º–∞ –∏–≥—Ä–æ–∫–æ–≤ –∏ –∏—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π (—Ç–µ–ø–µ—Ä—å —É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
let playerTerritories = {};

// –¢–µ–∫—É—â–∏–π –∏–≥—Ä–æ–∫ (—É–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
let currentPlayer = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
function initTerritorySystem(map) {
    console.log('Initializing territory system...');
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª–æ–π –¥–ª—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
    const territoryLayer = L.layerGroup().addTo(map);
    
    // –°–æ–∑–¥–∞–µ–º —Å–ª–æ–π –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏–π
    const establishmentLayer = L.layerGroup().addTo(map);
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –Ω–∞ –∫–∞—Ä—Ç—É
    addTerritoriesToMap(map, territoryLayer);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç—É
    addEstablishmentsToMap(map, establishmentLayer);
    
    // –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è–º–∏ —É–¥–∞–ª–µ–Ω–∞
    
    return {
        territoryLayer,
        establishmentLayer
    };
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π –Ω–∞ –∫–∞—Ä—Ç—É
function addTerritoriesToMap(map, layer) {
    establishmentsData.forEach(establishment => {
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞
        let territoryColor = establishment.territory.color;
        let territoryOpacity = establishment.territory.opacity;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤–ª–∞–¥–µ–ª–µ—Ü —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
        const owner = findTerritoryOwner(establishment.id);
        if (owner) {
            territoryColor = playerTerritories[owner].color;
            territoryOpacity = 0.6; // –ë–æ–ª–µ–µ —è—Ä–∫–∏–π —Ü–≤–µ—Ç –¥–ª—è –∑–∞—Ö–≤–∞—á–µ–Ω–Ω—ã—Ö —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
        }
        
        // –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏–≥–æ–Ω —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
        const territoryPolygon = L.polygon(establishment.territory.polygon, {
            fillColor: territoryColor,
            fillOpacity: territoryOpacity,
            color: territoryColor,
            weight: 2,
            opacity: 0.8,
            className: 'territory-polygon'
        }).addTo(layer);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ (—Ç–æ–ª—å–∫–æ –ø—Ä–æ—Å–º–æ—Ç—Ä, –±–µ–∑ –∑–∞—Ö–≤–∞—Ç–∞)
        territoryPolygon.bindPopup(`
            <div class="territory-popup">
                <h3>–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è ${establishment.name}</h3>
                <p><strong>–ó–∞–≤–µ–¥–µ–Ω–∏–µ:</strong> ${establishment.name}</p>
                <p><strong>–¢–∏–ø:</strong> ${establishment.type}</p>
                <p><strong>–î–æ—Ö–æ–¥:</strong> $${establishment.income}/—á–∞—Å</p>
                ${owner ? `<p><strong>–í–ª–∞–¥–µ–ª–µ—Ü:</strong> ${playerTerritories[owner].name}</p>` : '<p><strong>–°—Ç–∞—Ç—É—Å:</strong> –°–≤–æ–±–æ–¥–Ω–∞</p>'}
                <p style="color: var(--warm-gold); font-size: 0.8rem; margin-top: 0.5rem;"><em>–¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞—Ö–≤–∞—Ç–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è</em></p>
            </div>
        `);
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
        territoryPolygon.on('mouseover', function(e) {
            this.setStyle({
                fillOpacity: territoryOpacity + 0.2,
                weight: 3
            });
        });
        
        territoryPolygon.on('mouseout', function(e) {
            this.setStyle({
                fillOpacity: territoryOpacity,
                weight: 2
            });
        });
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª–∏–≥–æ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è
        establishment.territoryPolygon = territoryPolygon;
    });
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏–π –Ω–∞ –∫–∞—Ä—Ç—É
function addEstablishmentsToMap(map, layer) {
    establishmentsData.forEach(establishment => {
        // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—É—é –∏–∫–æ–Ω–∫—É –¥–ª—è –∑–∞–≤–µ–¥–µ–Ω–∏—è
        const establishmentIcon = L.divIcon({
            html: `
                <div class="establishment-marker ${establishment.type} ${findTerritoryOwner(establishment.id) ? 'captured' : ''}">
                    <div class="marker-icon">üè•</div>
                    <div class="marker-label">${establishment.name}</div>
                </div>
            `,
            iconSize: [40, 40],
            iconAnchor: [20, 20],
            popupAnchor: [0, -20],
            className: 'establishment-marker-icon'
        });
        
        // –°–æ–∑–¥–∞–µ–º –º–∞—Ä–∫–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è
        const establishmentMarker = L.marker(establishment.coords, { 
            icon: establishmentIcon 
        }).addTo(layer);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≤–µ–¥–µ–Ω–∏–∏ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
        const owner = findTerritoryOwner(establishment.id);
        
        // –°–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è
        const createPopupContent = async () => {
            let distanceInfo = '';
            if (!owner) {
                try {
                    const distanceCheck = await checkCaptureDistance(establishment);
                    if (distanceCheck.distance !== null) {
                        const status = distanceCheck.canCapture ? 
                            `<span style="color: #4caf50;">‚úÖ ${distanceCheck.distance}–º (–¥–æ—Å—Ç—É–ø–Ω–æ)</span>` : 
                            `<span style="color: #f44336;">‚ùå ${distanceCheck.distance}–º (—Å–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ)</span>`;
                        distanceInfo = `<p><strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> ${status}</p>`;
                    } else {
                        distanceInfo = `<p><strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> <span style="color: #ff9800;">‚ö†Ô∏è –ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ</span></p>`;
                    }
                } catch (error) {
                    distanceInfo = `<p><strong>–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ:</strong> <span style="color: #ff9800;">‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è</span></p>`;
                }
            }
            
            return `
                <div class="establishment-popup">
                    <h3>${establishment.name}</h3>
                    <p><strong>–¢–∏–ø:</strong> ${establishment.type}</p>
                    <p><strong>–î–æ—Ö–æ–¥:</strong> $${establishment.income}/—á–∞—Å</p>
                    <p><strong>–°—Ç–æ–∏–º–æ—Å—Ç—å –∑–∞—Ö–≤–∞—Ç–∞:</strong> $${establishment.captureCost}</p>
                    <p><strong>–ó–∞—â–∏—Ç–∞:</strong> ${establishment.defense}</p>
                    ${distanceInfo}
                    ${owner ? `<p><strong>–í–ª–∞–¥–µ–ª–µ—Ü:</strong> ${playerTerritories[owner].name}</p>` : '<p><strong>–°—Ç–∞—Ç—É—Å:</strong> –°–≤–æ–±–æ–¥–Ω–æ</p>'}
                    ${!owner ? `
                        <div style="display: flex; gap: 0.5rem; justify-content: center; margin-top: 0.5rem;">
                            <button class="capture-button" onclick="attemptEstablishmentCapture('${establishment.id}')" style="
                                background: linear-gradient(45deg, #2d5016, #1e3a0a);
                                border: 1px solid var(--warm-gold);
                                color: var(--cream);
                                padding: 0.5rem 1rem;
                                cursor: pointer;
                                font-size: 0.8rem;
                                border-radius: 3px;
                                flex: 1;
                            ">‚öîÔ∏è –ó–∞—Ö–≤–∞—Ç–∏—Ç—å</button>
                            <button class="purchase-button" onclick="attemptEstablishmentPurchase('${establishment.id}')" style="
                                background: linear-gradient(45deg, var(--brick-red), var(--dark-brick));
                                border: 1px solid var(--warm-gold);
                                color: var(--cream);
                                padding: 0.5rem 1rem;
                                cursor: pointer;
                                font-size: 0.8rem;
                                border-radius: 3px;
                                flex: 1;
                            ">üí∞ –ö—É–ø–∏—Ç—å ($${establishment.captureCost})</button>
                        </div>
                    ` : ''}
                    <p style="color: var(--warm-gold); font-size: 0.7rem; margin-top: 0.5rem;"><em>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞: 20–º</em></p>
                </div>
            `;
        };
        
        establishmentMarker.bindPopup(createPopupContent());
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–æ–ø–∞–ø–∞
        establishmentMarker.on('popupopen', async function() {
            if (!owner) {
                try {
                    const distanceCheck = await checkCaptureDistance(establishment);
                    const popup = this.getPopup();
                    if (popup) {
                        const newContent = await createPopupContent();
                        popup.setContent(newContent);
                    }
                } catch (error) {
                    console.log('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è:', error);
                }
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∑–æ–Ω—É –∑–∞—Ö–≤–∞—Ç–∞ (–∫—Ä—É–≥ —Ä–∞–¥–∏—É—Å–æ–º 20 –º–µ—Ç—Ä–æ–≤)
        const captureZone = L.circle(establishment.coords, {
            radius: 20, // 20 –º–µ—Ç—Ä–æ–≤
            color: '#ff6b6b',
            fillColor: '#ff6b6b',
            fillOpacity: 0.1,
            weight: 2,
            dashArray: '5, 5',
            className: 'capture-zone'
        }).addTo(layer);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∑–æ–Ω—ã –∑–∞—Ö–≤–∞—Ç–∞
        const zoneLabel = L.marker(establishment.coords, {
            icon: L.divIcon({
                html: `<div style="
                    background: rgba(255, 107, 107, 0.9);
                    color: white;
                    padding: 2px 6px;
                    border-radius: 3px;
                    font-size: 10px;
                    font-weight: bold;
                    border: 1px solid #ff4757;
                ">–ó–æ–Ω–∞: 20–º</div>`,
                iconSize: [60, 20],
                iconAnchor: [30, 10],
                className: 'capture-zone-label'
            })
        }).addTo(layer);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ä –∏ –∑–æ–Ω—É –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ–¥–µ–Ω–∏—è
        establishment.marker = establishmentMarker;
        establishment.captureZone = captureZone;
        establishment.zoneLabel = zoneLabel;
    });
}

// –ü–æ–∏—Å–∫ –≤–ª–∞–¥–µ–ª—å—Ü–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
function findTerritoryOwner(establishmentId) {
    for (const playerId in playerTerritories) {
        if (playerTerritories[playerId].territories.includes(establishmentId)) {
            return playerId;
        }
    }
    return null;
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞
function getPlayerData(playerId) {
    return playerTerritories[playerId];
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
function updatePlayerInTerritorySystem(player) {
    if (!player) return;
    
    const playerId = player.name.toLowerCase();
    playerTerritories[playerId] = {
        name: player.name,
        color: player.color,
        territories: player.territories || [],
        totalIncome: player.totalIncome || 0
    };
    
    console.log('Player updated in territory system:', playerTerritories[playerId]);
}

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏ (–≤ –º–µ—Ç—Ä–∞—Ö)
function calculateDistance(lat1, lon1, lat2, lon2) {
    const R = 6371e3; // –†–∞–¥–∏—É—Å –ó–µ–º–ª–∏ –≤ –º–µ—Ç—Ä–∞—Ö
    const œÜ1 = lat1 * Math.PI / 180;
    const œÜ2 = lat2 * Math.PI / 180;
    const ŒîœÜ = (lat2 - lat1) * Math.PI / 180;
    const ŒîŒª = (lon2 - lon1) * Math.PI / 180;

    const a = Math.sin(ŒîœÜ/2) * Math.sin(ŒîœÜ/2) +
              Math.cos(œÜ1) * Math.cos(œÜ2) *
              Math.sin(ŒîŒª/2) * Math.sin(ŒîŒª/2);
    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));

    return R * c; // –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –≤ –º–µ—Ç—Ä–∞—Ö
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞—Ö–≤–∞—Ç–∞ –ø–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é
function checkCaptureDistance(establishment) {
    return new Promise((resolve) => {
        if (!navigator.geolocation) {
            resolve({ canCapture: false, distance: null, error: '–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è' });
            return;
        }

        navigator.geolocation.getCurrentPosition(
            function(position) {
                const playerLat = position.coords.latitude;
                const playerLon = position.coords.longitude;
                const establishmentLat = establishment.coords[0];
                const establishmentLon = establishment.coords[1];
                
                const distance = calculateDistance(playerLat, playerLon, establishmentLat, establishmentLon);
                const canCapture = distance <= 20; // 20 –º–µ—Ç—Ä–æ–≤
                
                resolve({ canCapture, distance: Math.round(distance), error: null });
            },
            function(error) {
                resolve({ canCapture: false, distance: null, error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ' });
            },
            { enableHighAccuracy: true, timeout: 5000, maximumAge: 30000 }
        );
    });
}

// –ü–æ–ø—ã—Ç–∫–∞ –∑–∞—Ö–≤–∞—Ç–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è
// –ó–∞—Ö–≤–∞—Ç –∑–∞–≤–µ–¥–µ–Ω–∏—è (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)
window.attemptEstablishmentCapture = async function(establishmentId) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (typeof checkAuth === 'function' && !checkAuth()) {
        return;
    }
    
    const establishment = establishmentsData.find(e => e.id === establishmentId);
    if (!establishment) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ö–≤–∞—á–µ–Ω–æ –ª–∏ —É–∂–µ
    if (findTerritoryOwner(establishmentId)) {
        showMessage('–≠—Ç–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ —É–∂–µ –∑–∞—Ö–≤–∞—á–µ–Ω–æ!', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –∑–∞–≤–µ–¥–µ–Ω–∏—è
    const distanceCheck = await checkCaptureDistance(establishment);
    
    if (!distanceCheck.canCapture) {
        if (distanceCheck.distance) {
            showMessage(`–°–ª–∏—à–∫–æ–º –¥–∞–ª–µ–∫–æ! –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${distanceCheck.distance}–º. –ú–∞–∫—Å–∏–º—É–º: 20–º`, 'error');
        } else {
            showMessage(`–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ: ${distanceCheck.error}`, 'error');
        }
        return;
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—Ö–≤–∞—Ç–∞ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ)
    const confirmCapture = confirm(`
        –ó–∞—Ö–≤–∞—Ç–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ "${establishment.name}"?
        
        –ó–∞—Ö–≤–∞—Ç: –ë–ï–°–ü–õ–ê–¢–ù–û
        –î–æ—Ö–æ–¥: $${establishment.income}/—á–∞—Å
        –ó–∞—â–∏—Ç–∞: ${establishment.defense}
        
        –ü–æ—Å–ª–µ –∑–∞—Ö–≤–∞—Ç–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç –æ–∫—Ä–∞—à–µ–Ω–∞ –≤ –≤–∞—à —Ü–≤–µ—Ç.
    `);

    if (!confirmCapture) return;

    // –í—ã–ø–æ–ª–Ω—è–µ–º –∑–∞—Ö–≤–∞—Ç (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)
    performEstablishmentCapture(establishment, false);
};

// –ü–æ–∫—É–ø–∫–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è (–ø–ª–∞—Ç–Ω–æ)
window.attemptEstablishmentPurchase = async function(establishmentId) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (typeof checkAuth === 'function' && !checkAuth()) {
        return;
    }
    
    const establishment = establishmentsData.find(e => e.id === establishmentId);
    if (!establishment) return;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞—Ö–≤–∞—á–µ–Ω–æ –ª–∏ —É–∂–µ
    if (findTerritoryOwner(establishmentId)) {
        showMessage('–≠—Ç–æ –∑–∞–≤–µ–¥–µ–Ω–∏–µ —É–∂–µ –∑–∞—Ö–≤–∞—á–µ–Ω–æ!', 'error');
        return;
    }

    const user = typeof currentUser === 'function' ? currentUser() : currentUser;
    if (!user) {
        showMessage('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É!', 'error');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ª–∏ –¥–µ–Ω–µ–≥ —É –∏–≥—Ä–æ–∫–∞
    if (user.money < establishment.captureCost) {
        showMessage(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥! –ù—É–∂–Ω–æ: $${establishment.captureCost}, —É –≤–∞—Å: $${user.money}`, 'error');
        return;
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ (–ø–ª–∞—Ç–Ω–æ–π)
    const confirmPurchase = confirm(`
        –ö—É–ø–∏—Ç—å –∑–∞–≤–µ–¥–µ–Ω–∏–µ "${establishment.name}"?
        
        –°—Ç–æ–∏–º–æ—Å—Ç—å: $${establishment.captureCost}
        –î–æ—Ö–æ–¥: $${establishment.income}/—á–∞—Å
        –ó–∞—â–∏—Ç–∞: ${establishment.defense}
        
        –ü–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –±—É–¥–µ—Ç –æ–∫—Ä–∞—à–µ–Ω–∞ –≤ –≤–∞—à —Ü–≤–µ—Ç.
    `);

    if (!confirmPurchase) return;

    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∫—É–ø–∫—É (–ø–ª–∞—Ç–Ω–æ)
    performEstablishmentCapture(establishment, true);
};

// –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞—Ö–≤–∞—Ç–∞/–ø–æ–∫—É–ø–∫–∏ –∑–∞–≤–µ–¥–µ–Ω–∏—è
function performEstablishmentCapture(establishment, isPurchase = false) {
    const user = typeof currentUser === 'function' ? currentUser() : currentUser;
    if (!user) {
        showMessage('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É!', 'error');
        return;
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ–∫—É–ø–∫–∞, —Å–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏
    if (isPurchase && user.money < establishment.captureCost) {
        showMessage(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥! –ù—É–∂–Ω–æ: $${establishment.captureCost}, —É –≤–∞—Å: $${user.money}`, 'error');
        return;
    }

    if (isPurchase) {
        user.money -= establishment.captureCost;
        showMessage(`–ó–∞–≤–µ–¥–µ–Ω–∏–µ "${establishment.name}" –∫—É–ø–ª–µ–Ω–æ –∑–∞ $${establishment.captureCost}!`, 'success');
    } else {
        showMessage(`–ó–∞–≤–µ–¥–µ–Ω–∏–µ "${establishment.name}" –∑–∞—Ö–≤–∞—á–µ–Ω–æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!`, 'success');
    }

    // –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ
    captureEstablishment(establishment.id);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏–≥—Ä–æ–∫–∞
    if (typeof updatePlayerInterface === 'function') {
        updatePlayerInterface();
    }
}

// –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞—Ö–≤–∞—Ç–∞ –∑–∞–≤–µ–¥–µ–Ω–∏—è (—Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –∑–∞—Ö–≤–∞—Ç–æ–º —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏)
function captureEstablishment(establishmentId) {
    const establishment = establishmentsData.find(e => e.id === establishmentId);
    if (!establishment) return;
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const user = typeof currentUser === 'function' ? currentUser() : currentUser;
    if (!user) {
        showMessage('–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω!', 'error');
        return;
    }
    
    const playerId = user.name.toLowerCase();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
    updatePlayerInTerritorySystem(user);
    
    // –ó–∞—Ö–≤–∞—Ç—ã–≤–∞–µ–º –∑–∞–≤–µ–¥–µ–Ω–∏–µ –∏ –ø—Ä–∏–ª–µ–≥–∞—é—â—É—é —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é
    playerTerritories[playerId].territories.push(establishmentId);
    playerTerritories[playerId].totalIncome += establishment.income;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –∏–≥—Ä–æ–∫–æ–≤
    if (typeof playersDatabase !== 'undefined' && playersDatabase[playerId]) {
        playersDatabase[playerId].territories.push(establishmentId);
        playersDatabase[playerId].totalIncome += establishment.income;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
    updateEstablishmentDisplay(establishmentId, playerId);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ö–≤–∞—á–µ–Ω –ª–∏ –≤–µ—Å—å —Ä–∞–π–æ–Ω
    checkDistrictControl();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ (–∑–∞–≤–µ–¥–µ–Ω–∏–µ + —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è)
    showCaptureSuccess(`${establishment.name} –∏ –ø—Ä–∏–ª–µ–≥–∞—é—â–∞—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è`, playerTerritories[playerId].name);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    updatePlayerStats();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–≤–µ–¥–µ–Ω–∏—è –∏ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
function updateEstablishmentDisplay(establishmentId, playerId) {
    const establishment = establishmentsData.find(e => e.id === establishmentId);
    if (!establishment || !establishment.territoryPolygon) return;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏
    establishment.territoryPolygon.setStyle({
        fillColor: playerTerritories[playerId].color,
        color: playerTerritories[playerId].color,
        fillOpacity: 0.6,
        opacity: 0.8
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –∑–∞–≤–µ–¥–µ–Ω–∏—è
    if (establishment.marker) {
        const newIcon = L.divIcon({
            html: `
                <div class="establishment-marker ${establishment.type} captured" style="border-color: ${playerTerritories[playerId].color};">
                    <div class="marker-icon">üè•</div>
                    <div class="marker-label">${establishment.name}</div>
                    <div class="owner-badge" style="background: ${playerTerritories[playerId].color};">${playerTerritories[playerId].name.charAt(0)}</div>
                </div>
            `,
            iconSize: [40, 40],
            iconAnchor: [20, 20],
            popupAnchor: [0, -20],
            className: 'establishment-marker-icon'
        });
        establishment.marker.setIcon(newIcon);
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ —Ä–∞–π–æ–Ω–æ–º
function checkDistrictControl() {
    const allEstablishments = establishmentsData.map(e => e.id);
    const capturedByPlayer = {};
    
    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∑–∞—Ö–≤–∞—á–µ–Ω–Ω—ã–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –ø–æ –∏–≥—Ä–æ–∫–∞–º
    for (const playerId in playerTerritories) {
        capturedByPlayer[playerId] = playerTerritories[playerId].territories.filter(t => allEstablishments.includes(t));
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∏–≥—Ä–æ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ö–≤–∞—Ç–∏–ª –≤—Å–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ —Ä–∞–π–æ–Ω–∞
    for (const playerId in capturedByPlayer) {
        if (capturedByPlayer[playerId].length === allEstablishments.length) {
            showDistrictControlBonus(playerId);
            return;
        }
    }
}

// –ü–æ–∫–∞–∑ –±–æ–Ω—É—Å–∞ –∑–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å —Ä–∞–π–æ–Ω–∞
function showDistrictControlBonus(playerId) {
    const bonus = 100; // –ë–æ–Ω—É—Å –∑–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å –≤—Å–µ–≥–æ —Ä–∞–π–æ–Ω–∞
    playerTerritories[playerId].totalIncome += bonus;
    
    const bonusMsg = document.createElement('div');
    bonusMsg.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background: linear-gradient(135deg, var(--charcoal-black), var(--deep-black));
        border: 3px solid var(--warm-gold);
        padding: 2rem;
        color: var(--cream);
        z-index: 1002;
        font-family: var(--font-sans);
        text-align: center;
        animation: slideIn 0.3s ease;
    `;
    
    bonusMsg.innerHTML = `
        <h3 style="color: var(--warm-gold); font-family: var(--font-serif); font-size: 1.5rem; margin-bottom: 1rem;">üéØ –ö–æ–Ω—Ç—Ä–æ–ª—å —Ä–∞–π–æ–Ω–∞!</h3>
        <p style="margin-bottom: 1rem;">${playerTerritories[playerId].name} –∑–∞—Ö–≤–∞—Ç–∏–ª –≤–µ—Å—å —Ä–∞–π–æ–Ω!</p>
        <p style="color: var(--warm-gold); font-weight: bold; font-size: 1.2rem;">–ë–æ–Ω—É—Å: +$${bonus}/—á–∞—Å</p>
        <button onclick="closeBonusModal()" style="
            background: linear-gradient(45deg, var(--warm-gold), var(--copper));
            border: 2px solid var(--deep-black);
            color: var(--deep-black);
            padding: 0.5rem 1rem;
            cursor: pointer;
            font-weight: bold;
            margin-top: 1rem;
        ">–û—Ç–ª–∏—á–Ω–æ!</button>
    `;
    
    document.body.appendChild(bonusMsg);
    
    window.closeBonusModal = function() {
        document.body.removeChild(bonusMsg);
    };
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
    setTimeout(() => {
        if (document.body.contains(bonusMsg)) {
            document.body.removeChild(bonusMsg);
        }
    }, 5000);
}

// –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞—Ö–≤–∞—Ç–µ
function showCaptureSuccess(establishmentName, playerName) {
    const successMsg = document.createElement('div');
    successMsg.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, var(--charcoal-black), var(--deep-black));
        border: 2px solid var(--warm-gold);
        padding: 1rem 2rem;
        color: var(--cream);
        z-index: 1001;
        font-family: var(--font-sans);
        animation: slideIn 0.3s ease;
    `;
    
    successMsg.innerHTML = `
        <div style="color: var(--warm-gold); font-weight: bold;">üéØ –¢–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è –∑–∞—Ö–≤–∞—á–µ–Ω–∞!</div>
        <div style="font-size: 0.9rem; margin-top: 0.5rem;">${establishmentName} —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç ${playerName}</div>
    `;
    
    document.body.appendChild(successMsg);
    
    setTimeout(() => {
        if (document.body.contains(successMsg)) {
            document.body.removeChild(successMsg);
        }
    }, 3000);
}

// –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—è–º–∏ —É–¥–∞–ª–µ–Ω–∞

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–æ–≤
function updatePlayerStats() {
    // –ü–∞–Ω–µ–ª—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É–¥–∞–ª–µ–Ω–∞ - —Ñ—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    return;
}

// –°–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
window.changeCurrentPlayer = function(playerId) {
    currentPlayer = playerId;
    updatePlayerStats();
    console.log(`Current player changed to: ${playerTerritories[playerId].name}`);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–µ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–π
window.updateTerritoryPlayerSelector = function(player) {
    if (player) {
        updatePlayerInTerritorySystem(player);
        updatePlayerStats();
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.initTerritorySystem = initTerritorySystem;
window.captureEstablishment = captureEstablishment;
window.updatePlayerInTerritorySystem = updatePlayerInTerritorySystem;
window.updatePlayerStats = updatePlayerStats;
